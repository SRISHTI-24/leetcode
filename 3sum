class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> v;
        int s=0;
        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size();i++)
        {
            if(i>0 && nums[i]==nums[i-1])
                continue;
            int st=i+1;
            int l=nums.size()-1;
            while(st<l)
            {
                s=nums[i]+nums[st]+nums[l];
                if(s<0)
                {
                   
                        ++st;
                }
                else if(s>0)
                {
                    
                        --l;
                }
                else if(s==0)
                {
                    vector<int> arr;
                    arr.push_back(nums[i]);
                    arr.push_back(nums[st]);
                    arr.push_back(nums[l]);
                    v.push_back(arr);
                    ++st;
                    while(st<l && nums[st]==nums[st-1])
                    {
                        ++st;
                    }
                }
            }
        }
        return v;
        
    }
};class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> v;
        int s=0;
        sort(nums.begin(), nums.end());
        for(int i=0;i<nums.size();i++)
        {
            if(i>0 && nums[i]==nums[i-1])
                continue;
            int st=i+1;
            int l=nums.size()-1;
            while(st<l)
            {
                s=nums[i]+nums[st]+nums[l];
                if(s<0)
                {
                   
                        ++st;
                }
                else if(s>0)
                {
                    
                        --l;
                }
                else if(s==0)
                {
                    vector<int> arr;
                    arr.push_back(nums[i]);
                    arr.push_back(nums[st]);
                    arr.push_back(nums[l]);
                    v.push_back(arr);
                    ++st;
                    while(st<l && nums[st]==nums[st-1])
                    {
                        ++st;
                    }
                }
            }
        }
        return v;
        
    }
};
